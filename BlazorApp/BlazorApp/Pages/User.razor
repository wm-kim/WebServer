@page "/user"
@using BlazorApp.Data;

<h3>Online Users</h3>

<p>
	Users : <b>@_users.Count</b>
</p>

<br />


<ul class="list-group">
	@foreach(UserData user in _users)
	{
		<!-- user 없어도 똑같이 동작할텐데, 연동이 되어있다는 힌트를 주는 것. onclick에서 인자 넘겨 받는거 안됨. 람다 이용-->
		<li @key="user" class="list-group-item">
			<button type="button" class="btn btn-link" @onclick="(() => KickUser(user))">[Kick]</button>
			<label>@user.Name</label>
		</li>
	}
</ul>

<br />

<div class="cotainer">
	<div class = "row">
		<div class = "col">
			<input class="form-control" placeholder="Add User" @bind-value="_inputName" />
		</div>
		<div class = "col">
			<!-- html 속성에도 binding 가능 -->
			<!-- conditional attribute 속성 자체에 조건을 붙일 수 도 있다. ex disabled -->
			<button class="@_btnClass" type="button" @onclick="AddUser" disabled="@(_users.Count >= 5)">Add a User</button>
		</div>
	</div>
</div>

@code {
	List<UserData> _users = new List<UserData>();

	string _inputName;
	string _btnClass = "btn btn-primary";

	// unity OnStart 같은것 규약되어있음
	protected override void OnInitialized()
	{
		_users.Add(new UserData() { Name = "Rookis" });
		_users.Add(new UserData() { Name = "Faker" });
		_users.Add(new UserData() { Name = "Deft" });
		RefreshButton();
	}

	void AddUser()
	{
		_users.Add(new UserData() { Name = _inputName });
		_inputName = "";
		RefreshButton();
	}

	void KickUser(UserData user)
	{
		_users.Remove(user);
		RefreshButton();
	}

	void RefreshButton()
	{
		if (_users.Count() % 2 == 0) _btnClass = "btn btn-primary";
		else _btnClass = "btn btn-secondary";
	}
}
